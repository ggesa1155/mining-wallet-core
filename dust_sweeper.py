"""
Dust Sweeper ‚Äî —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ "–ø—ã–ª–µ–≤—ã—Ö" UTXO –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –∏—Ö –æ—á–∏—Å—Ç–∫–µ.
"""

import requests
import argparse

DUST_LIMIT = 546  # —Å–∞—Ç–æ—à–∏

def get_utxos(address):
    url = f"https://blockstream.info/api/address/{address}/utxo"
    r = requests.get(url)
    if r.status_code != 200:
        raise Exception("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç Blockstream API.")
    return r.json()

def sweep_dust(address):
    utxos = get_utxos(address)
    dust_utxos = [u for u in utxos if u['value'] <= DUST_LIMIT]
    print(f"üì¨ –ê–¥—Ä–µ—Å: {address}")
    print(f"üîé –ù–∞–π–¥–µ–Ω–æ UTXO: {len(utxos)} | –ü—ã–ª–µ–≤—ã—Ö (‚â§{DUST_LIMIT} —Å–∞—Ç): {len(dust_utxos)}")
    total_dust = sum(u['value'] for u in dust_utxos)
    print(f"üí∏ –°—É–º–º–∞—Ä–Ω–∞—è –ø—ã–ª—å: {total_dust} —Å–∞—Ç–æ—à–∏")
    print("\nüìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:")
    for i, u in enumerate(dust_utxos, 1):
        print(f"{i}. TXID: {u['txid']} | Index: {u['vout']} | –°—É–º–º–∞: {u['value']} —Å–∞—Ç–æ—à–∏")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Dust Sweeper ‚Äî –ø–æ–∏—Å–∫ –∏ –∞–Ω–∞–ª–∏–∑ –ø—ã–ª—å–Ω—ã—Ö UTXO.")
    parser.add_argument("address", help="Bitcoin-–∞–¥—Ä–µ—Å")
    args = parser.parse_args()
    sweep_dust(args.address)
